       /* 기본 스타일 초기화 */
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        /* 전체 페이지 스타일 */
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
            background-color: #f0f2f5;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            color: #333;
        }

        /* 메모장 컨테이너 */
        .container {
            width: 90%;
            max-width: 800px;
            height: 80vh;
            background-color: #ffffff;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: column;
            padding: 20px;
        }

        h1 {
            font-size: 24px;
            margin-bottom: 16px;
            text-align: center;
            color: #1c1e21;
        }

        /* 상단 버튼 영역 */
        .toolbar {
            margin-bottom: 16px;
            display: flex;
            gap: 10px;
        }

        button {
            padding: 8px 16px;
            border: none;
            border-radius: 6px;
            background-color: #007bff;
            color: white;
            font-size: 14px;
            cursor: pointer;
            transition: background-color 0.2s;
        }

        button:hover {
            background-color: #0056b3;
        }

        /* 텍스트 입력 영역 */
        #note-area {
            flex-grow: 1; /* 남은 공간을 모두 차지 */
            width: 100%;
            padding: 15px;
            border: 1px solid #ccd0d5;
            border-radius: 6px;
            font-size: 16px;
            line-height: 1.5;
            resize: none; /* 크기 조절 비활성화 */
            font-family: inherit;
        }

        #note-area:focus {
            outline: none;
            border-color: #007bff;
            box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
        }
    </style>
</head>
<body>

    <div class="container">
        <h1>기본 메모장</h1>
        <div class="toolbar">
            <button id="new-note">새 메모</button>
            <button id="download-note">파일로 저장</button>
        </div>
        <textarea id="note-area" placeholder="여기에 내용을 입력하세요..."></textarea>
    </div>

    <script>
        // DOM 요소가 모두 로드된 후에 스크립트 실행
        document.addEventListener('DOMContentLoaded', () => {
            const noteArea = document.getElementById('note-area');
            const newNoteBtn = document.getElementById('new-note');
            const downloadNoteBtn = document.getElementById('download-note');

            const STORAGE_KEY = 'simple-notepad-content';

            // 1. 페이지 로드 시 저장된 내용 불러오기
            const savedNote = localStorage.getItem(STORAGE_KEY);
            if (savedNote) {
                noteArea.value = savedNote;
            }

            // 2. 텍스트 입력 시 자동으로 내용 저장 (자동 저장)
            noteArea.addEventListener('input', () => {
                localStorage.setItem(STORAGE_KEY, noteArea.value);
            });

            // 3. '새 메모' 버튼 클릭 이벤트
            newNoteBtn.addEventListener('click', () => {
                // 사용자에게 확인 받기
                const isConfirmed = confirm('정말로 모든 내용을 지우고 새 메모를 작성하시겠습니까?');
                if (isConfirmed) {
                    noteArea.value = ''; // 텍스트 영역 비우기
                    localStorage.removeItem(STORAGE_KEY); // 저장된 내용 삭제
                }
            });

            // 4. '파일로 저장' 버튼 클릭 이벤트
            downloadNoteBtn.addEventListener('click', () => {
                const textToSave = noteArea.value;

                // 내용이 없으면 다운로드하지 않음
                if (textToSave.trim().length === 0) {
                    alert('저장할 내용이 없습니다.');
                    return;
                }

                // Blob 객체를 사용하여 텍스트 파일 생성
                const blob = new Blob([textToSave], { type: 'text/plain;charset=utf-8' });

                // 다운로드를 위한 임시 링크 생성
                const link = document.createElement('a');
                link.href = URL.createObjectURL(blob);
                
                // 파일 이름 설정 (예: note-2023-10-27.txt)
                const date = new Date().toISOString().slice(0, 10);
                link.download = `note-${date}.txt`;

                // 링크를 클릭하여 파일 다운로드 실행
                link.click();

                // 임시 링크 객체 해제
                URL.revokeObjectURL(link.href);
            });
        });
    </script>

</body>
</html>
