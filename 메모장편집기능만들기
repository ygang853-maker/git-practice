<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>메모장 (편집 기능 포함)</title>
    <style>
        /* 기본 스타일 초기화 */
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        /* 전체 페이지 스타일 */
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
            background-color: #f0f2f5;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            color: #333;
        }

        /* 메모장 컨테이너 */
        .container {
            width: 90%;
            max-width: 800px;
            height: 80vh;
            background-color: #ffffff;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: column;
            padding: 20px;
        }

        h1 {
            font-size: 24px;
            margin-bottom: 16px;
            text-align: center;
            color: #1c1e21;
        }

        /* 상단 도구 모음 */
        .toolbar {
            margin-bottom: 16px;
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }

        .toolbar-group {
            display: flex;
            gap: 5px;
        }

        button {
            padding: 8px 12px;
            border: 1px solid transparent;
            border-radius: 6px;
            background-color: #f0f2f5;
            color: #333;
            font-size: 14px;
            cursor: pointer;
            transition: background-color 0.2s, border-color 0.2s;
        }

        button:hover {
            background-color: #e4e6e9;
        }
        
        #download-note, #new-note {
            background-color: #007bff;
            color: white;
        }
        #download-note:hover, #new-note:hover {
            background-color: #0056b3;
        }

        .format-button {
            font-weight: bold;
            width: 36px;
        }
        .format-button.italic {
            font-style: italic;
        }
        .format-button.underline {
            text-decoration: underline;
        }

        /* 편집 가능한 텍스트 영역 */
        #note-area {
            flex-grow: 1; /* 남은 공간을 모두 차지 */
            width: 100%;
            padding: 15px;
            border: 1px solid #ccd0d5;
            border-radius: 6px;
            font-size: 16px;
            line-height: 1.6;
            font-family: inherit;
            overflow-y: auto; /* 내용이 길어지면 스크롤 생성 */
        }

        #note-area:focus {
            outline: none;
            border-color: #007bff;
            box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
        }

        /* contenteditable div를 위한 placeholder */
        #note-area:empty::before {
            content: "여기에 내용을 입력하세요...";
            color: #999;
            pointer-events: none;
        }
    </style>
</head>
<body>

    <div class="container">
        <h1>메모장</h1>
        <div class="toolbar">
            <div class="toolbar-group">
                <button id="new-note">새 메모</button>
                <button id="download-note">파일로 저장</button>
            </div>
            <div class="toolbar-group">
                <button id="bold-btn" class="format-button">B</button>
                <button id="italic-btn" class="format-button italic">I</button>
                <button id="underline-btn" class="format-button underline">U</button>
            </div>
        </div>
        <div id="note-area" contenteditable="true"></div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const noteArea = document.getElementById('note-area');
            const newNoteBtn = document.getElementById('new-note');
            const downloadNoteBtn = document.getElementById('download-note');
            const boldBtn = document.getElementById('bold-btn');
            const italicBtn = document.getElementById('italic-btn');
            const underlineBtn = document.getElementById('underline-btn');

            const STORAGE_KEY = 'rich-notepad-content';

            // 1. 페이지 로드 시 저장된 내용 불러오기
            const savedNote = localStorage.getItem(STORAGE_KEY);
            if (savedNote) {
                noteArea.innerHTML = savedNote;
            }

            // 2. 내용 입력 시 자동으로 저장 (HTML 형식으로 저장)
            noteArea.addEventListener('input', () => {
                localStorage.setItem(STORAGE_KEY, noteArea.innerHTML);
            });

            // 3. '새 메모' 버튼 클릭 이벤트
            newNoteBtn.addEventListener('click', () => {
                const isConfirmed = confirm('정말로 모든 내용을 지우고 새 메모를 작성하시겠습니까?');
                if (isConfirmed) {
                    noteArea.innerHTML = ''; // 편집 영역 비우기
                    localStorage.removeItem(STORAGE_KEY); // 저장된 내용 삭제
                }
            });

            // 4. '파일로 저장' 버튼 클릭 이벤트 (순수 텍스트로 저장)
            downloadNoteBtn.addEventListener('click', () => {
                // innerText를 사용하여 HTML 태그를 제외한 순수 텍스트만 추출
                const textToSave = noteArea.innerText;

                if (textToSave.trim().length === 0) {
                    alert('저장할 내용이 없습니다.');
                    return;
                }

                const blob = new Blob([textToSave], { type: 'text/plain;charset=utf-8' });
                const link = document.createElement('a');
                link.href = URL.createObjectURL(blob);
                const date = new Date().toISOString().slice(0, 10);
                link.download = `note-${date}.txt`;
                link.click();
                URL.revokeObjectURL(link.href);
            });

            // 5. 텍스트 서식 버튼 이벤트
            boldBtn.addEventListener('click', () => {
                document.execCommand('bold');
                noteArea.focus(); // 버튼 클릭 후에도 편집 영역에 포커스 유지
            });

            italicBtn.addEventListener('click', () => {
                document.execCommand('italic');
                noteArea.focus();
            });

            underlineBtn.addEventListener('click', () => {
                document.execCommand('underline');
                noteArea.focus();
            });
        });
    </script>

</body>
</html>
